using System;
using System.Linq;

namespace Level1Space
{
    public static class Level1
    {
        public static bool MisterRobot(int N, int[] data)
        {
            int z = 0;      // временная переменная для перестановки чисел
            int num = 1;    // переменная отвечающая за то, какое число в настоящее время перемещается
            int indexOfArray = 0;   // переменная сохраняющая значение индекса массива найденного в нем числа
            int count = 1;      // счетчик перебора числовых значений
            // идея: находим в исходном массиве наименьшее значение и переставляем его в начало массива, затем берем следующее значение
            // по нарастающей и переставляем его на следующее место после предыдущего значения.
            // в зависимости от комбинации случайно расставленных значений в исхдной задаче, есть возможность не выполнения условй сортировки
            // когда два последних числовых значения поменялись местами

            while (data.Length != count)    // общий цикл выполняется пока не прошлись по каждому элементу массива и не переместили его в левую часть 
            {
                if (num == data.Length - 1) // если предпоследнее числовое значение в массиве достигло значения индекса конца массива - выход из цикла
                {
                    count = data.Length;    // точка выхода из WHILE
                    break;
                }

                for (int i = 0; i < data.Length; i++)
                {
                    if (data[i] == num)     // ищем в массиве искомое число (которое с каждым новым циклом увеличивается на единицу)
                    {
                        indexOfArray = i;   // запоминаем его индекс в массиве и от него начинаем его передвигать в возможную крайнюю левую позицию

                        if (indexOfArray > num) // двигаемся на два значения влево
                        {
                            // two step left
                            z = 0;
                            z = data[indexOfArray];
                            data[indexOfArray] = data[indexOfArray - 1];
                            data[indexOfArray - 1] = data[indexOfArray - 2];
                            data[indexOfArray - 2] = z;
                            z = 0;
                            i = 0;
                        }
                        else if (indexOfArray == num)   // если нет возможности на два, то двигаемся на один шаг влево
                        {
                            // one step left
                            z = 0;
                            z = data[indexOfArray - 1];
                            data[indexOfArray - 1] = data[indexOfArray];
                            data[indexOfArray] = data[indexOfArray + 1];
                            data[indexOfArray + 1] = z;
                            z = 0;
                            i = 0;
                        }
                        else if (indexOfArray == num - 1)   // если число уже находится на своем месте
                        {
                            num++;  // переходим к следующему числу
                            count++;    // увеличиваем счетчик перемещения
                            break;  // переходим к следующей итерации перемещения
                        }
                    }
                }
            }

            // когда все возможные операции по перемещению чисел выполнены, проверяем последний элемент массива
            if (data[data.Length - 1] == data.Length)   // если числовое значение полседнего элемента массива совпадает с значением количества элементов массива
            {                                           // !!! можно былобы пойти через GetUpperBound(0)!!!
                return true;    // тогда массив отсортирован правильно по возрастанию
            }
            else
            {
                return false;   // если порядок следования чисел нарушен, тогда массив не отсортирован и два значения последних элементов массива поменяны местами и задача по сортировке невыполнима
            }
        }
    }
}
